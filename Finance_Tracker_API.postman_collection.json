{
  "info": {
    "name": "Finance Tracker API",
    "description": "Complete Postman collection for testing the Finance Tracker API with authentication, user management, and transaction CRUD operations.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "transactionId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Check if the API server is running"
      },
      "response": []
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.authToken) {",
                  "        pm.collectionVariables.set('authToken', response.data.authToken);",
                  "        pm.collectionVariables.set('userId', response.data.user.userId);",
                  "        console.log('User registered and token saved');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"John Doe\",\n  \"emailAddress\": \"john.doe@example.com\",\n  \"accountType\": \"personal\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.authToken) {",
                  "        pm.collectionVariables.set('authToken', response.data.authToken);",
                  "        pm.collectionVariables.set('userId', response.data.user.userId);",
                  "        console.log('User logged in and token saved');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailAddress\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current user profile (requires authentication)"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration and login"
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile & Balance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Get user profile and current balance"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Jane Doe\",\n  \"accountType\": \"business\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Update user profile information"
          },
          "response": []
        },
        {
          "name": "Get Current Balance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/balance",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "balance"]
            },
            "description": "Get current account balance"
          },
          "response": []
        },
        {
          "name": "Update Balance",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 1000,\n  \"description\": \"Initial deposit\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/balance",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "balance"]
            },
            "description": "Update account balance (add/subtract amount)"
          },
          "response": []
        }
      ],
      "description": "User profile and balance management endpoints"
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Create Credit Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.transaction) {",
                  "        pm.collectionVariables.set('transactionId', response.data.transaction.transactionId);",
                  "        console.log('Transaction created with ID: ' + response.data.transaction.transactionId);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionType\": \"credit\",\n  \"amount\": 500.00,\n  \"description\": \"Salary deposit\",\n  \"category\": \"Income\",\n  \"transactionDate\": \"2024-01-15T10:30:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"]
            },
            "description": "Create a new credit transaction"
          },
          "response": []
        },
        {
          "name": "Create Debit Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.transaction) {",
                  "        pm.collectionVariables.set('transactionId', response.data.transaction.transactionId);",
                  "        console.log('Transaction created with ID: ' + response.data.transaction.transactionId);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionType\": \"debit\",\n  \"amount\": 75.50,\n  \"description\": \"Grocery shopping\",\n  \"category\": \"Food\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"]
            },
            "description": "Create a new debit transaction"
          },
          "response": []
        },
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/transactions?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all transactions with pagination"
          },
          "response": []
        },
        {
          "name": "Get Transactions with Filtering",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/transactions?transactionType=credit&category=Income&page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"],
              "query": [
                {
                  "key": "transactionType",
                  "value": "credit"
                },
                {
                  "key": "category",
                  "value": "Income"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            },
            "description": "Get transactions filtered by type and category"
          },
          "response": []
        },
        {
          "name": "Get Transactions by Date Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/transactions?startDate=2024-01-01&endDate=2024-01-31&sortBy=transactionDate&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31"
                },
                {
                  "key": "sortBy",
                  "value": "transactionDate"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            },
            "description": "Get transactions within a date range with sorting"
          },
          "response": []
        },
        {
          "name": "Get Transaction Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/transactions/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "stats"]
            },
            "description": "Get transaction statistics and analytics"
          },
          "response": []
        },
        {
          "name": "Get Transaction by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/transactions/{{transactionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "{{transactionId}}"]
            },
            "description": "Get a specific transaction by ID"
          },
          "response": []
        },
        {
          "name": "Update Transaction",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated salary deposit\",\n  \"category\": \"Salary\",\n  \"transactionDate\": \"2024-01-15T10:30:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transactions/{{transactionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "{{transactionId}}"]
            },
            "description": "Update transaction details (description, category, date)"
          },
          "response": []
        },
        {
          "name": "Delete Transaction",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/transactions/{{transactionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "{{transactionId}}"]
            },
            "description": "Delete a transaction (soft delete)"
          },
          "response": []
        }
      ],
      "description": "Transaction CRUD operations with pagination and filtering"
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailAddress\": \"invalid@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Test invalid login credentials"
          },
          "response": []
        },
        {
          "name": "Invalid Transaction Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionType\": \"invalid\",\n  \"amount\": -100,\n  \"description\": \"ab\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"]
            },
            "description": "Test transaction validation errors"
          },
          "response": []
        },
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Test access without authentication token"
          },
          "response": []
        }
      ],
      "description": "Test error scenarios and validation"
    }
  ]
}
